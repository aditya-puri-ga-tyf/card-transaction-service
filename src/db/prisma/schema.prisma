generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum TransactionType {
  CREDIT
  DEBIT
}

enum TransactionStatus {
  PENDING
  APPROVED
  FAILED
  REFUNDED
}

model User {
  id          String        @id @default(uuid())
  role        UserRole      @default(USER)
  isActive    Boolean       @default(true) @map("is_active")
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  cards       Card[]
  transactions Transaction[]

  @@map("users")
}

model Card {
  id              String        @id @default(uuid())
  balance         Decimal       @default(0)
  reservedBalance Decimal       @default(0) @map("reserved_balance")
  isActive        Boolean       @default(true) @map("is_active")
  user            User          @relation(fields: [userId], references: [id])
  userId          String        @map("user_id")
  transactions    Transaction[]
  createdAt       DateTime      @default(now()) @map("created_at")
  updatedAt       DateTime      @updatedAt @map("updated_at")
  deletedAt       DateTime?     @map("deleted_at")

  @@map("cards")
}

model Transaction {
  id          String            @id @default(uuid())
  type        TransactionType
  status      TransactionStatus @default(PENDING)
  amount      Decimal
  description String?
  card        Card              @relation(fields: [cardId], references: [id])
  cardId      String            @map("card_id")
  user        User              @relation(fields: [userId], references: [id])
  userId      String            @map("user_id")
  createdAt   DateTime          @default(now()) @map("created_at")
  updatedAt   DateTime          @updatedAt @map("updated_at")
  deletedAt   DateTime?         @map("deleted_at")

  @@map("transactions")
} 